{
    "collab_server" : "",
    "contents" : "library(rjson)\n\nsic_sis.list <-fromJSON(file='./data/AsinS_genes.json')\nsinC_Genes <- read.csv('./data/sinC_genes_dedup.csv')\n\n\nsic_sis.list.clear <- lapply(sic_sis.list, function(gpair){\n  if(length(gpair) == 0){\n    return(NA)\n  } else{\n    return(gpair[gpair!=''])\n  }\n})\n\nsic_sis.list.clear <- sic_sis.list.clear[unlist(lapply(sic_sis.list.clear, function(x){!is.na(x[1])}))]\n\nsic_sis.unlist <- data.frame(do.call('rbind',unlist(lapply(sic_sis.list.clear, function(gpair){\n  as.list(gpair)\n}), recursive = FALSE)))\n\ntrue_row_names <- unlist(lapply(row.names(sic_sis.unlist), function(sinCgeneID){\n  grep(substr(sinCgeneID, 1, 10), sinC_Genes$gene_id)\n}))\n\nsic_sis.unlist[,2] <- sinC_Genes$gene_id[true_row_names]\n\nnames(sic_sis.unlist) <- c('AsinS2_geneID', 'AsinC2_geneID')\nrow.names(sic_sis.unlist) <- 1:nrow(sic_sis.unlist)\nwrite.csv2(sic_sis.unlist, './data/S2_to_C2_bridge.csv')\n\nsinC_Genes.withSins <- sinC_Genes[true_row_names,] <- as.character(sic_sis.unlist$AsinS2_geneID)\nsinC_Genes.withSins[,6] <- as.character(sic_sis.unlist$AsinS2_geneID)\nsinC_Genes.withSins[,1] <- NULL\n",
    "created" : 1487564100616.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1139605748",
    "id" : "561ED314",
    "lastKnownWriteTime" : 1487568730,
    "last_content_update" : 1487568730090,
    "path" : "~/prog/r/sinensis/R/CtoS_csvmake.R",
    "project_path" : "R/CtoS_csvmake.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}